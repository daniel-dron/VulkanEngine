
#version 450

#pragma optionNV (unroll all)

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_samplerless_texture_functions : require
#include "bindless.glsl"

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(set = 1, binding = 0, rgba32f) uniform image2D output_image;

layout( push_constant ) uniform constants {
    int source_tex;
    int size;
} pc;

shared vec3 sharedData[16][16];

void main() {
    ivec2 dims = textureSize(textures[pc.source_tex], 0);
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    ivec2 lid = ivec2(gl_LocalInvocationID.xy);

    sharedData[lid.y][lid.x] = texelFetch(nonuniformEXT(sampler2D(textures[pc.source_tex], samplers[LINEAR_SAMPLER_ID])), gid, 0).rgb;

    barrier();
    memoryBarrierShared();

    // Compute blur
    vec3 result = vec3(0.0f);
    for (int x = -2; x <= 2; x++) {
        for (int y = -2; y <= 2; y++) {
            ivec2 offset = lid + ivec2(x, y);
            offset = clamp(offset, ivec2(0), ivec2(15, 15));

            result += sharedData[offset.y][offset.x];
        }
    }

    result = result / (5.0f * 5.0f);

    imageStore(output_image, gid, vec4(result, 1.0));
}